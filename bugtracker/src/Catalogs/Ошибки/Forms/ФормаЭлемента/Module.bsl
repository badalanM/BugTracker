#Область ТекстКода
&НаСервере
Процедура ВставитьТекстКодаНаСервере(ИсходныйТекст)
	ПронумероватьТекстКода(ИсходныйТекст);
	HTMLДокумент = Справочники.Ошибки.ПолучитьHTMLПредставлениеКода(ИсходныйТекст);
	Объект.ТекстКода = HTMLДокумент;
	Объект.ТекстКодаСтрока = ИсходныйТекст;
КонецПроцедуры

&НаКлиенте
Процедура ВставитьТекстКода(Команда)
	
	Подсказка = "Введите текст кода";
	Оповещение = Новый ОписаниеОповещения("ПослеВводаСтроки",ЭтотОбъект,Параметры);
	ПоказатьВводСтроки(Оповещение, "", Подсказка, 0, Истина);

КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаСтроки(Строка, Параметры) Экспорт
	
	Если НЕ Строка = Неопределено Тогда

		ВставитьТекстКодаНаСервере(СтрЗаменить(Строка,Символы.Таб,"        "));
		
	КонецЕсли;
	Элементы.ВставитьТекстКода.Заголовок = "Заменить текст кода";
	ЭтотОбъект.Модифицированность = истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьТекстКонтролеромКода(Команда)
	ТекстКодаСтрока = Объект.ТекстКодаСтрока;
	Если ЗначениеЗаполнено(ТекстКодаСтрока) Тогда
		
		Состояние(НСтр("ru = 'Выполняется проверка кода'"),,,БиблиотекаКартинок.ДлительнаяОперация48);
		
		ПараметрыФормы = Новый Структура("АвтоматическаяПроверкаКода", Истина);
		ФормаКонтролераКода = ПолучитьФорму("Обработка.КонтролерКода.Форма", ПараметрыФормы);
		ФормаКонтролераКода.ВыполнитьАвтоПроверку(ТекстКодаСтрока);
		Объект.СообщенияКонтролераКода.Очистить();
		Для Каждого СтрокаИсточника из ФормаКонтролераКода.Сообщения Цикл
			НоваяСтрокаСообщения = Объект.СообщенияКонтролераКода.Добавить();
			НоваяСтрокаСообщения.НомерПервойСтроки = СтрокаИсточника.НомерСтроки;
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСообщения, СтрокаИсточника);
		КонецЦикла;	
		
		Если ФормаКонтролераКода.Сообщения.Количество() = 0 Тогда
			НоваяСтрокаСообщения = Объект.СообщенияКонтролераКода.Добавить();
			НоваяСтрокаСообщения.Сообщение = НСтр("ru = 'Ошибок не обнаружено'");
		КонецЕсли;
		
		Модифицированность = Истина;
		ОбновитьДоступностьКнопок();
		
		Состояние(НСтр("ru = 'Проверка кода завершена'"),,,БиблиотекаКартинок.ДлительнаяОперация48);
		
		УстановитьВидимостьДоступностьОбъектов();
				
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОсновнаФункциональностьФормы

&НаКлиенте
Процедура УстановитьВидимостьДоступностьОбъектов()
	//Элементы.ГруппаРезультатПроверкиКода.Видимость = (Объект.СообщенияКонтролераКода.Количество() > 0);
	//#Если ВебКлиент Тогда 
		//Элементы.ПроверитьТекстКонтролеромКода.Доступность = Ложь;
		//Элементы.ПроверитьТекстКонтролеромКода.Заголовок = Элементы.ПроверитьТекстКонтролеромКода.Заголовок + " (в Веб-Клиенте пока не работает)"; 
	//#КонецЕсли
КонецПроцедуры	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьДоступностьОбъектов();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Пользователь = ПолучитьПользователя();
	Если не Параметры.Ключ.Пустая() Тогда
	//	Если ЗначениеЗаполнено(Объект.ТекстКода) Тогда
	//		Элементы.ВставитьТекстКода.Заголовок = "Заменить текст кода";
	//	КонецЕсли;
		ПолеКартинки = ПолучитьНавигационнуюСсылку(Объект.Ссылка, "Картинка");
	//	ОпределитьДоступностьполейФормы(Ложь);
	//Иначе 
	//	ОпределитьДоступностьполейФормы(Истина);
	//	Объект.Ответственный = Пользователь;
	КонецЕсли;
	//
	
	Если Параметры.Ключ.Пустая() Тогда
		Объект.Ответственный = Пользователь;
	КонецЕсли;
	
	Форум.Параметры.УстановитьЗначениеПараметра("Ссылка", Параметры.Ключ);
	//
	Элементы.ПолеКартинки.РазмерКартинки = РазмерКартинки.АвтоРазмер;	
	//
	//Видимость = НеПодписан(Пользователь);	
	//ОбновитьВидимость(Видимость);

КонецПроцедуры

&НаСервере
Процедура ОпределитьДоступностьПолейФормы(МожноРедактировать)

	//Для каждого Элемент Из ЭтотОбъект.КоманднаяПанель.ПодчиненныеЭлементы Цикл
	//	
	//	Элемент.Доступность = МожноРедактировать;
	//
	//КонецЦикла;
	//
	//КоманднаяПанель.ПодчиненныеЭлементы.ФормаВключитьРедактирование.Доступность = не МожноРедактировать;
	//
	//Элементы.ГруппаЗаголовок.Доступность 	= МожноРедактировать;  
	//Элементы.ВставитьТекстКода.Доступность 	= МожноРедактировать;  
	//
	//Элементы.ПолеКартинки.Доступность 		= Истина;  
	//Элементы.ПровереноЛР.Доступность 		= Истина;
	//Элементы.ПровереноРецензентом.Доступность = Истина;
	//Элементы.Комментарий.Доступность		= Истина;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ЗначениеВХранилище = Неопределено;
	Если ЗначениеЗаполнено(Параметры.ДанныеКартинки) Тогда  // для измененной картинки
		ЗначениеВХранилище = Новый ХранилищеЗначения(Base64Значение(Параметры.ДанныеКартинки));
	Иначе
		Если ЗначениеЗаполнено(ПолеКартинки) и ЭтоАдресВременногоХранилища(ПолеКартинки) Тогда  // для новой картинки, добавленной в текущей форме
			ЗначениеВХранилище = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(ПолеКартинки));
		КонецЕсли;
	КонецЕсли;
	
	ТекущийОбъект.Картинка = ЗначениеВХранилище;
	ТекущийОбъект.Записать();
	ПолеКартинки = ПолучитьНавигационнуюСсылку(ТекущийОбъект.Ссылка, "Картинка");
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьРедактирование(Команда)
	
	ОпределитьДоступностьПолейФормы(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОпределитьДоступностьПолейФормы(Ложь);
		
КонецПроцедуры
#КонецОбласти

#Область Обсуждение
&НаКлиенте
Процедура ДобавитьКмментарий(Команда)
	Если Параметры.Ключ.Пустая() Тогда
	
		ПоказатьПредупреждение(,"Для добавления комментариев нужно записать ошибку в базу");
		Возврат;
	
	КонецЕсли; 
	ДопПараметры = Новый Структура;
	Пользователь = ПолучитьПользователя();
	ДопПараметры.Вставить("Пользователь", Пользователь);
	Подсказка = "Введите Замечание";
	Оповещение = Новый ОписаниеОповещения("ДобавитьКомментарийЗавершение",ЭтотОбъект,ДопПараметры);
	ПоказатьВводСтроки(Оповещение,"",Подсказка,,Истина);	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПользователя()
	Возврат Справочники.Пользователи.УстановитьОтветственногоПоПользователюИБ();
КонецФункции

&НаКлиенте
Процедура ДобавитьКомментарийЗавершение(Строка, ДопПараметры) Экспорт
	 Если НЕ Строка = Неопределено Тогда

		ДобавитьКомментарийНаСервере(Строка, ДопПараметры.Пользователь);
		
	КонецЕсли;
	Элементы.Форум.Обновить();
КонецПроцедуры

&НаСервере
Процедура ДобавитьКомментарийНаСервере(Комментарий, Пользователь)
	
	Ошибка = Объект.Ссылка;
	
	Запись = РегистрыСведений.Обсуждение.СоздатьМенеджерЗаписи();
	Запись.Период = ТекущаяДатаСеанса();
	Запись.Пользователь = Пользователь;
	Запись.Ошибка = Ошибка;
	Запись.Комментарий = Комментарий;
	Запись.Записать(Истина);
	
	ТекстКомментария = СтрШаблон("Пользователь ""%1"" добавил Замечание ""%2""",Пользователь,Комментарий);
	Дата = ТекущаяДатаСеанса();	
	ДобавитьУведомления(Пользователь,Ошибка,Дата,Комментарий);
	
КОнецПроцедуры
#КонецОбласти

#Область РаботаСКартинкой
&НаКлиенте
Процедура ПолеКартинкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(ПолеКартинки) Тогда 
		ПросмотретьПрисоединенныйФайл();
	Иначе
		ДобавитьИзображениеНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиенте()
	
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьКартинкуЗавершение", ЭтотОбъект);
	
	НачатьПомещениеФайла(Оповещение,,,Истина, УникальныйИдентификатор); 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКартинкуЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт

	Если не Результат Тогда 
		Возврат;
	КонецЕсли;
	
	ПолеКартинки = Адрес;
	ЭтаФорма.Модифицированность = Истина;

КонецПроцедуры // ЗагрузитьКартинкуЗавершение()

&НаКлиенте
Процедура ПросмотретьПрисоединенныйФайл()
	
	Параметры.АдресКартинки = ПолеКартинки;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("АдресКартинки", ПолеКартинки);
	ПараметрыФормы.Вставить("Ключ", Объект.Ссылка);

	Оповещение = Новый ОписаниеОповещения("ПриЗакрытииФормыКартинки", ЭтотОбъект);
	ОткрытьФорму("Справочник.Ошибки.Форма.ФормаКартинки", ПараметрыФормы,ЭтотОбъект,Истина,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытииФормыКартинки(Результат, ДополнительныйПараметр) Экспорт
	
	Если Результат = Истина Тогда 
		ПолеКартинки = Параметры.АдресКартинки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСУведомлениями
&НаСервере
Процедура ПолучатьУведомленияНаСервере()
	
	НаборЗаписейРегистра = РегистрыСведений.ПолучателиУведомлений.СоздатьНаборЗаписей();
	НаборЗаписейРегистра.Прочитать();
	ЗаписьНабора = НаборЗаписейРегистра.Добавить();
	ЗаписьНабора.Ошибка = Объект.Ссылка;
	ЗаписьНабора.Пользователь = ПолучитьПользователя();
	НаборЗаписейРегистра.Записать();
	
	ОбновитьВидимость(Ложь);
	Прочитать();

КонецПроцедуры

&НаКлиенте
Процедура ПолучатьУведомления(Команда)
	ПолучатьУведомленияНаСервере();
КонецПроцедуры

&НаСервере
Процедура НеПолучатьУведомленмяНаСервере()
	
	Пользователь = ПолучитьПользователя();	
	НаборЗаписейРегистра = РегистрыСведений.ПолучателиУведомлений.СоздатьНаборЗаписей();
	НаборЗаписейРегистра.Отбор.Пользователь.Установить(Пользователь);
	НаборЗаписейРегистра.Отбор.Ошибка.Установить(Объект.Ссылка);
	НаборЗаписейРегистра.Записать();
	
	ОбновитьВидимость(Истина);
	Прочитать();
	
КонецПроцедуры		

&НаКлиенте
Процедура НеПолучатьУведомленмя(Команда)
	НеПолучатьУведомленмяНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьВидимость(Видимость)
	Элементы.ФорумПолучатьУведомления.Видимость = Видимость;
	Элементы.ФорумНеПолучатьУведомления.Видимость = Не Видимость;
КонецПроцедуры

&НаСервере
Функция НеПодписан(Пользователь)
	
	ДанныеПоПолучателям = ПолучитьДанныеПоПолучателямУведомлений(Пользователь,Объект.Ссылка);
			
	Возврат ДанныеПоПолучателям.Пустой();
	
КонецФункции

&НаКлиенте
Процедура СсылкаJIRAНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	#Если ВебКлиент Тогда 
		Если Не ПодключитьРасширениеРаботыСФайлами() Тогда 
			НачатьУстановкуРасширенияРаботыСФайлами();
		КонецЕсли;
	#КонецЕсли
	Оповещение = Новый ОписаниеОповещения();
    НачатьЗапускПриложения(Оповещение, Объект.СсылкаJIRA,, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровереноРецензентомПриИзменении(Элемент)
	ОбновитьДоступностьКнопок();
КонецПроцедуры

&НаКлиенте
Процедура ПровереноЛРПриИзменении(Элемент)
	ОбновитьДоступностьКнопок();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступностьКнопок()
	Элементы.ФормаЗаписать.Доступность = Истина;
	Элементы.ФормаЗаписатьИЗакрыть.Доступность = Истина;	
КонецПроцедуры

#КонецОбласти


 
 
 
